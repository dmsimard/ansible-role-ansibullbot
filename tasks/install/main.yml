- name: Enable SELinux
  ansible.posix.selinux:
    state: enforcing
    policy: targeted
  tags:
    - ansibullbot
    - ansibullbot_selinux
    - notest

- name: Set fcontext
  community.general.sefcontext:
    setype: initrc_var_run_t
    target: "{{ ansibullbot_home_dir }}(/.*)?"
  notify: restorecon
  tags:
    - ansibullbot
    - ansibullbot_selinux
    - notest

- meta: flush_handlers
  tags:
    - ansibullbot
    - ansibullbot_selinux
    - notest

- name: Set hostname
  hostname:
    name: "{{ inventory_hostname }}"
  tags:
    - ansibullbot
    - ansibullbot_hostname
    - notest

- name: Install packages
  yum:
    name: "{{ ansibullbot_packages | union(_ansibullbot_extra_packages) | default([]) }}"
    state: latest
  tags:
    - ansibullbot
    - packages

- name: Create {{ ansibullbot_group }} group
  group:
    name: "{{ ansibullbot_group }}"
    gid: '1099'
  tags:
    - ansibullbot
    - user

- name: Create {{ ansibullbot_user }} account
  user:
    name: "{{ ansibullbot_user }}"
    home: "{{ ansibullbot_home_dir }}"
    uid: '1099'
  tags:
    - ansibullbot
    - user

- name: Copy dotfiles for root
  copy:
    src: "{{ item }}"
    dest: ~root/.{{ item | basename }}
    owner: root
    group: root
  with_fileglob: dotfiles/*
  tags:
    - ansibullbot
    - ansibullbot_dotfiles

- name: Copy ansibullbot.cfg
  template:
    src: ansibullbot.cfg.j2
    dest: "{{ ansibullbot_home_dir }}/.ansibullbot.cfg"
    owner: "{{ ansibullbot_user }}"
    group: "{{ ansibullbot_group }}"
    mode: '0600'
  notify: restart ansibullbot
  tags:
    - ansibullbot
    - ansibullbot_dotfiles

- name: Checkout git repo
  git:
    repo: "{{ ansibullbot_repo_url }}"
    dest: "{{ ansibullbot_clone_path }}"
    version: "{{ ansibullbot_branch }}"
    recursive: yes
    force: yes
  become: yes
  become_user: "{{ ansibullbot_user }}"
  tags:
    - ansibullbot
    - ansibullbot_git
    - ansibullbot_update

- name: Create virtualenv and install Python requirements
  pip:
    requirements: "{{ ansibullbot_clone_path }}/requirements.txt"
    virtualenv_command: "{{ _ansibullbot_python_executable | default(ansible_playbook_python) }} -m venv"
    virtualenv: "{{ ansibullbot_venv_dir }}"
  become_user: "{{ ansibullbot_user }}"
  tags:
    - ansibullbot
    - ansibullbot_pip
    - ansibullbot_update

- name: Download stopwords
  shell: "{{ ansibullbot_venv_dir }}/bin/python3.8 -c 'import nltk; nltk.download(\"punkt\")'"
  become_user: "{{ ansibullbot_user }}"
  args:
    creates: "{{ ansibullbot_home_dir }}/nltk_data"
  tags:
    - ansibullbot
    - ansibullbot_nltk_data

- import_tasks: ansibullbot_service.yml

- include_tasks: ansibullbot_receiver_service.yml
  when: ansibullbot_receiver_enabled
  tags:
    - ansibullbot
    - ansibullbot_receiver
    - ansibullbot_service
    - ansibullbot_update
